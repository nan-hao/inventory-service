name: Java Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 24
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'
          server-id: github-recipeforcode-platform
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_PACKAGES_USER: ${{ github.actor }}
          GITHUB_PACKAGES_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SETTINGS_PATH="${{ steps.setup-java.outputs.settings-path }}"
          if [ -z "$SETTINGS_PATH" ]; then SETTINGS_PATH=".mvn/settings.xml"; fi
          mvn -s "$SETTINGS_PATH" -B -ntp verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.organization=${{ vars.SONAR_ORG }} \
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}

  docker:
    name: Build and Push Docker image
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute lowercased owner
        id: vars
        run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Set up settings.xml for package auth
        id: setup-java-docker
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'
          cache: 'maven'
          server-id: github-recipeforcode-platform
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.vars.outputs.owner_lc }}/inventory-service
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            GITHUB_PACKAGES_USER=${{ github.actor }}
            GITHUB_PACKAGES_TOKEN=${{ secrets.GITHUB_TOKEN }}
          secrets: |
            id=maven_settings,src=${{ steps.setup-java-docker.outputs.settings-path }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
